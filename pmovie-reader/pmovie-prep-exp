#!/usr/bin/env bash
USAGE="Copies pmovie reading scripts and makes pbs files.

Usage:
    ./pmovie-prep-exp [options] <pmovie-dir> [<lspreader-dir> [<pbsoutput-dir>]]
Options:
    -h                   Print help
    -n N                 Specify number N of nodes. 1 is usually enough for
                         2D sims and is the default.
    -s SERVER            Specify server. Current valid ones are \"ramses\" and \"glenn\".
                         \"ramses\" is default.
    -N RAMSESNODE        Run only on the node RAMSESNODE. Default does not use this.
"
NODES=1
SERVER="ramses"
RDDIR="/home/ngirmang.1/lspreader"
CONDA="/home/ngirmang.1/conda"
RAMSESNODE=
while getopts ':hn:s:N:' opt; do
      case $opt in
          h)
              echo "$USAGE"
              exit 0
              ;;
          n)
              NODES=$OPTARG
              shift $((OPTIND-1))
              ;;
          N)
              RAMSESNODE=$OPTARG
              shift $((OPTIND-1))
              ;;
          s)
              SERVER=$OPTARG
              shift $((OPTIND-1))
              ;;
              
          \?)
              echo "Invalid option: $OPTARG">&2
              exit 1
              ;;
          :)
              echo "Option -$OPTARG requires an argument.">&2
              exit 1
              ;;
      esac
done

source $CONDA
DEST=$( [ -n "$1" ] && echo $1)
[ -z "$DEST" ] && echo $USAGE && exit 1;
[ -n "$2" ]  && RDDIR="$2";
OUTDIR=$( [ -n "$3" ] && echo $3 ||  echo "." )

#checking for remote node
if [ -n "$( echo "$DEST" | grep \: )" ]; then
    RAMSESNODE=$(echo "$DEST" | sed 's/@\{0,1\}\([A-Z,a-z,0-9]\+\):.*/\1/');
fi
rcp $RDDIR/lspreader.py $RDDIR/misc.py $RDDIR/pmov.py $DEST
rcp $RDDIR/pmovie-reader/pmovie-pbsgen-exp.py $RDDIR/misc.py $OUTDIR/
if [ $SERVER == "ramses" ] && [ -n "$RAMSESNODE" ]; then
    DIRONNODE=$(echo "$DEST" | sed 's/@\{0,1\}[A-Z,a-z,0-9]\+:\(.*\)/\1/');
    rsh $RAMSESNODE ls "$DIRONNODE">.lsfiles
    rcp "$DEST/*.lsp" ./.destlsp
    ./pmovie-pbsgen-exp.py --server=$SERVER --nodes=$NODES --outdir=$OUTDIR \
                           --dotlsp=.destlsp --filelist=.lsfiles \
                           --ramses-node=$RAMSESNODE $DIRONNODE
else
    ./pmovie-pbsgen-exp.py --server=$SERVER --nodes=$NODES --outdir=$OUTDIR \
                           --ramses-node=$RAMSESNODE $DEST
fi

PBSES=$(ls | grep 'pmovie-conv.*.pbs$')
#generating the reader script. Calling it unleashes the hounds.
echo "#!/bin/bash

for i in $PBSES; do
    qsub \$i;
done;
">pmoviereader.sh
chmod +x pmoviereader.sh
